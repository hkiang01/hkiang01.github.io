<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Kubernetes on Some reading materal</title><link>https://hkiang01.github.io/kubernetes/</link><description>Recent content in Kubernetes on Some reading materal</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 17 Oct 2020 15:56:47 -0500</lastBuildDate><atom:link href="https://hkiang01.github.io/kubernetes/index.xml" rel="self" type="application/rss+xml"/><item><title>Keycloak</title><link>https://hkiang01.github.io/kubernetes/keycloak/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hkiang01.github.io/kubernetes/keycloak/</guid><description>Keycloak is an identity management solution useful for securing applications in Kubernetes. This post shows how to set up Keycloak and secure an application in Kubernetes with Keycloak. Sample code available at https://github.com/hkiang01/keycloak-demo.
Installing Keycloak Simple first Database for production readiness Creating the chart Adding Postgres Preparing Keycloak Create a Realm Create a Client Create a User Testing out your User Securing your application Setting up the gatekeeper sidecar Deploy secured app Fixing the audience Some understanding Next steps Installing Keycloak Simple first We&amp;rsquo;re going to see what it takes to minimally get Keycloak to run in Kubernetes.</description></item><item><title>Wildcard certs</title><link>https://hkiang01.github.io/kubernetes/wildcard-certs/</link><pubDate>Sat, 17 Oct 2020 15:58:10 -0500</pubDate><guid>https://hkiang01.github.io/kubernetes/wildcard-certs/</guid><description>This is NOT representative of what I do at work (mostly for my home hobby cluster).
Once you have NGINX set up, each of your services can sit behind an Ingress with a host resembling something close to myservice.mydomain.com. That&amp;rsquo;s great and all, but you&amp;rsquo;ll find that your connections aren&amp;rsquo;t secured until you configure TLS.
Some understanding You&amp;rsquo;ll need to pass a DNS-01 challenge. The challenge itself is run by servers from a certificate authority (CA) such as Let&amp;rsquo;s Encrypt.</description></item></channel></rss>